{"version":3,"sources":["pages/trybewallet.png","components/trybewallet-form.png","actions/index.js","pages/Login.js","components/Header.js","components/Form.js","components/Table.js","pages/Wallet.js","App.js","serviceWorker.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","addCurrencies","currencies","type","addExpenses","expenses","editExpense","edit","Login","props","handleChanger","target","name","value","setState","state","email","password","isDisable","test","length","btnFunction","event","preventDefault","dispatch","history","addUser","push","this","className","src","trybewallet","alt","onChange","placeholder","data-testid","onClick","disabled","React","Component","connect","Header","moeda","total","reduce","acc","expense","currentCurrencie","Object","entries","exchangeRates","find","currency","ask","htmlFor","toFixed","user","wallet","Form","handleChangerForm","id","method","tag","description","buttonForm","addExp","buttonEdit","editExp2","editExp","auxiliar","indexObj","indexOf","despesa","obj","taxes","map","element","key","console","log","a","fetch","response","json","editExpense2","Table","removeBtn","removeExp","objDel","filter","editBtn","objEdit","objCurrencies","code","Number","removeExpenses","Wallet","object","data","keys","item","App","exact","path","component","Boolean","window","location","hostname","match","INITIAL_STATE","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5768395c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trybewallet.23f27658.png\";","module.exports = __webpack_public_path__ + \"static/media/trybewallet-form.9720ddeb.png\";","export const ADD_USER = 'ADD_USER';\nexport const ADD_CURRENCIES = 'ADD_CURRENCIES';\nexport const ADD_EXPENSES = 'ADD_EXPENSES';\nexport const REMOVE_EXPENSES = 'REMOVE_EXPENSES';\nexport const EDIT_EXPENSES = 'EDIT_EXPENSES';\nexport const EDIT_EXPENSES2 = 'EDIT_EXPENSES2';\n\nexport const addUser = (email) => ({\n  type: ADD_USER,\n  email,\n});\n\nexport const addCurrencies = (currencies) => ({\n  type: ADD_CURRENCIES,\n  currencies,\n});\n\nexport const addExpenses = (expenses, currencies) => ({\n  type: ADD_EXPENSES,\n  expenses,\n  currencies,\n});\n\nexport const removeExpenses = (expenses) => ({\n  type: REMOVE_EXPENSES,\n  expenses,\n});\n\nexport const editExpense = (edit) => ({\n  type: EDIT_EXPENSES,\n  edit,\n});\n\nexport const editExpense2 = (expenses) => ({\n  type: EDIT_EXPENSES2,\n  expenses,\n});\n\nexport const getCurrenciesThunk = () => {\n  console.log('tuc');\n  return async (dispatch) => {\n    const API = 'https://economia.awesomeapi.com.br/json/all';\n    const response = await fetch(API);\n    const object = await response.json();\n    const data = Object.keys(object);\n    const currencies = data.filter((item) => item !== 'USDT');\n    dispatch(addCurrencies(currencies));\n  };\n};\n\nexport const getAPI = (expense) => {\n  console.log('tuc');\n  return async (dispatch) => {\n    const API = 'https://economia.awesomeapi.com.br/json/all';\n    const response = await fetch(API);\n    const currencies = await response.json();\n    dispatch(addExpenses(expense, currencies));\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addUser } from '../actions/index';\nimport './Login.css';\nimport trybewallet from './trybewallet.png';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      isDisable: true,\n    };\n  }\n\n  handleChanger = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value },\n      () => {\n        const { email, password } = this.state;\n        const minPassword = 6;\n        const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        this.setState({\n          isDisable: !(regex.test(email) && password.length >= minPassword),\n        });\n      });\n  };\n\n  btnFunction = (event) => {\n    event.preventDefault();\n    const { dispatch, history } = this.props;\n    const { email } = this.state;\n    dispatch(addUser(email));\n\n    history.push('/carteira');\n  }\n\n  render() {\n    const { isDisable, email, password } = this.state;\n    return (\n      <div className=\"login-input\">\n        <img\n          src={ trybewallet }\n          alt=\"trybewallet logo\"\n        />\n        <input\n          type=\"text\"\n          onChange={ this.handleChanger }\n          placeholder=\"E-mail\"\n          data-testid=\"email-input\"\n          name=\"email\"\n          value={ email }\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          onChange={ this.handleChanger }\n          placeholder=\"Senha\"\n          data-testid=\"password-input\"\n          value={ password }\n        />\n        <button\n          type=\"submit\"\n          onClick={ this.btnFunction }\n          disabled={ isDisable }\n        >\n          Entrar\n        </button>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.shape).isRequired,\n};\n\nexport default connect()(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Header.css';\nimport trybewallet from './trybewallet-form.png';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      moeda: 'BRL',\n    };\n  }\n\n  render() {\n    const { email, expenses } = this.props;\n    const total = expenses.reduce((acc, expense) => {\n      const currentCurrencie = Object.entries(expense.exchangeRates)\n        .find((currency) => currency[0] === expense.currency);\n      return acc + (expense.value * currentCurrencie[1].ask);\n    }, 0);\n    const { moeda } = this.state;\n    return (\n      <header className=\"header-div\">\n        <img src={ trybewallet } alt=\"trybewallet logo\" />\n        <div className=\"header-email\">\n          <label htmlFor=\"email-header\">\n            Usuário:\n            <h3 name=\"email-header\" data-testid=\"email-field\">{ email }</h3>\n          </label>\n          <label htmlFor=\"header-values\">\n            Saldo de dívidas:\n            <div className=\"header-values\" name=\"header-values\">\n              <h3 data-testid=\"total-field\">{ total.toFixed(2) }</h3>\n              <h3 data-testid=\"header-currency-field\">{ moeda }</h3>\n            </div>\n          </label>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps, null)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getAPI, editExpense, editExpense2 } from '../actions/index';\nimport './Form.css';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expense: {},\n      id: 0,\n      value: 0,\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      description: '',\n    };\n  }\n\n  handleChangerForm = ({ target }) => {\n    const { name } = target;\n    this.setState({ [name]: target.value,\n    }, () => {\n      const { id, value, currency, method, tag, description } = this.state;\n      this.setState({\n        expense: {\n          id,\n          value,\n          currency,\n          method,\n          tag,\n          description,\n        },\n      });\n    });\n  };\n\n  buttonForm = (event) => {\n    event.preventDefault();\n    const { addExp } = this.props;\n    const { id, expense } = this.state;\n    addExp(expense);\n    this.setState({\n      id: (id + 1),\n      value: 0,\n      description: '',\n      currency: '',\n      method: '',\n      tag: '',\n    });\n  };\n\n  buttonEdit = (event) => {\n    event.preventDefault();\n    const { editExp2, editExp, edit, expenses } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    const auxiliar = [...expenses];\n    const indexObj = expenses.indexOf(expenses\n      .find((despesa) => despesa.id === edit.obj));\n    const taxes = expenses[indexObj].exchangeRates;\n    auxiliar[indexObj] = {\n      id: edit.obj,\n      value,\n      currency,\n      method,\n      tag,\n      description,\n      exchangeRates: taxes,\n    };\n    editExp2(auxiliar);\n    const edit1 = false;\n    editExp(edit1);\n    this.setState({\n      value: 0,\n      description: '',\n      currency: '',\n      method: '',\n      tag: '',\n    });\n  }\n\n  render() {\n    const { currencies, edit } = this.props;\n    const { value, currency, method, tag, description } = this.state;\n    return (\n      <form>\n        <label htmlFor=\"value\">\n          Valor\n          <input\n            type=\"number\"\n            data-testid=\"value-input\"\n            name=\"value\"\n            id=\"value\"\n            value={ value }\n            onChange={ this.handleChangerForm }\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Descrição\n          <input\n            type=\"text\"\n            data-testid=\"description-input\"\n            name=\"description\"\n            id=\"description\"\n            value={ description }\n            onChange={ this.handleChangerForm }\n          />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda\n          <select\n            name=\"currency\"\n            id=\"currency\"\n            data-testid=\"currency-input\"\n            value={ currency }\n            onChange={ this.handleChangerForm }\n          >\n            {currencies.map((element) => (\n              <option\n                key={ element }\n                value={ element }\n              >\n                { element }\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"method\">\n          Método de Pagamento\n          <select\n            data-testid=\"method-input\"\n            name=\"method\"\n            id=\"method\"\n            value={ method }\n            onChange={ this.handleChangerForm }\n          >\n            <option>Dinheiro</option>\n            <option>Cartão de débito</option>\n            <option>Cartão de crédito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          Categoria\n          <select\n            data-testid=\"tag-input\"\n            name=\"tag\"\n            id=\"tag\"\n            value={ tag }\n            onChange={ this.handleChangerForm }\n          >\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </select>\n        </label>\n        { edit === false ? (\n          <button\n            type=\"submit\"\n            onClick={ this.buttonForm }\n            id=\"btn-form\"\n          >\n            Adicionar Despesa\n          </button>\n        ) : (\n          <button\n            type=\"submit\"\n            onClick={ this.buttonEdit }\n            id=\"btn-form-edit\"\n          >\n            Editar despesa\n          </button>\n        )}\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  addExp: PropTypes.func.isRequired,\n  editExp: PropTypes.func.isRequired,\n  editExp2: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  edit: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addExp: (expenses) => dispatch(getAPI(expenses)),\n  editExp: (expenses) => dispatch(editExpense(expenses)),\n  editExp2: (expenses) => dispatch(editExpense2(expenses)),\n});\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  edit: state.wallet.edit,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { editExpense, removeExpenses } from '../actions/index';\nimport './Table.css';\n\nclass Table extends Component {\n  removeBtn = ({ target }) => {\n    const { expenses, removeExp } = this.props;\n    const objDel = target.value;\n    const base = expenses.filter((element) => element.description !== objDel);\n    removeExp(base);\n  };\n\n  editBtn = ({ target }) => {\n    const { expenses, editExp } = this.props;\n    const objEdit = target.value;\n    const edit = true;\n    const obj = expenses.filter((element) => element.description === objEdit)[0].id;\n    const editTarget = {\n      edit,\n      obj,\n    };\n    editExp(editTarget);\n  }\n\n  render() {\n    const { expenses } = this.props;\n    return (\n      <table>\n        <tbody>\n          <tr className=\"table-header\">\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n          {expenses.map((despesa) => {\n            const objCurrencies = Object.entries(despesa.exchangeRates)\n              .find((element) => element[1].code === despesa.currency)[1];\n            return (\n              <tr className=\"despesas\" key={ despesa.id }>\n                <td>{ despesa.description }</td>\n                <td>{ despesa.tag }</td>\n                <td>{ despesa.method }</td>\n                <td>{ Number(despesa.value).toFixed(2) }</td>\n                <td>{ objCurrencies.name }</td>\n                <td>{ Number(objCurrencies.ask).toFixed(2) }</td>\n                <td>{ Number(despesa.value * objCurrencies.ask).toFixed(2) }</td>\n                <td>Real</td>\n                <td>\n                  <button\n                    value={ despesa.description }\n                    onClick={ this.editBtn }\n                    type=\"button\"\n                    data-testid=\"edit-btn\"\n                    className=\"edit-btn\"\n                  >\n                    Editar\n                  </button>\n                  <button\n                    value={ despesa.description }\n                    onClick={ this.removeBtn }\n                    type=\"button\"\n                    data-testid=\"delete-btn\"\n                    className=\"delete-btn\"\n                  >\n                    Excluir\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nTable.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  removeExp: PropTypes.func.isRequired,\n  editExp: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeExp: (expenses) => dispatch(removeExpenses(expenses)),\n  editExp: (expenses) => dispatch(editExpense(expenses)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport { getCurrenciesThunk } from '../actions/index';\nimport Form from '../components/Form';\nimport Table from '../components/Table';\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(getCurrenciesThunk());\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Form />\n        <Table />\n      </div>\n    );\n  }\n}\n\nWallet.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default connect()(Wallet);\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nclass App extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route path=\"/carteira\" component={ Wallet } />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_USER } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nfunction user(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case ADD_USER:\n    return { ...state, email: action.email };\n  default:\n    return state;\n  }\n}\n\nexport default user;\n","import { ADD_CURRENCIES,\n  ADD_EXPENSES,\n  EDIT_EXPENSES,\n  REMOVE_EXPENSES,\n  EDIT_EXPENSES2 } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  edit: false,\n};\n\nfunction wallet(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case ADD_CURRENCIES:\n    return {\n      ...state,\n      currencies: action.currencies,\n    };\n  case ADD_EXPENSES:\n    return {\n      ...state,\n      expenses: [...state.expenses, {\n        ...action.expenses,\n        exchangeRates: action.currencies,\n      }],\n    };\n  case REMOVE_EXPENSES:\n    return {\n      ...state,\n      expenses: action.expenses,\n    };\n  case EDIT_EXPENSES:\n    return {\n      ...state,\n      edit: action.edit,\n    };\n  case EDIT_EXPENSES2:\n    console.log('tuc');\n    return {\n      ...state,\n      expenses: action.expenses,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({\n  user,\n  wallet,\n});\n\nexport default rootReducer;\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/index';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}